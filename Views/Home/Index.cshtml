@model ValpeVerkkokauppa.CustomModel.ProductCategoryViewModel
@helper RenderProductImage(int productId, byte[] image)
{
    if (image != null)
    {
        <img src="@Url.Action("GetImage", "Products", new { id = productId })" alt="Product Image" style="width:100px;height:100px;" />
    }
    else
    {
        <p>No Image</p>
    }
}

<main>

    <div class="box border1">

        @*Box vasen Sivun otsikko ja ikoni*@
        <div class="border1">
            <table class="table">
                <tr>
                    <th>
                        <h3>Kategoriat</h3>
                    </th>
                </tr>
                @foreach (var item in Model.Categories)
                {
                    <tr>
                        <td >
                            <a class="btn buttonCustom1" href="/Products/CategoryView?id=@item.Category_ID">@item.Name</a>
                        </td>
                    </tr>
                }
            </table>
        </div>

        @*Box keskellä Sivun otsikko ja ikoni*@
        <div class="border1">
            <div class="container">
                <div class="row">
                    <div class="col-2 oval">
                        <h4 class="fonts1"><span style="font-style: italic;">ValPe'co </span> WebShop</h4>
                    </div>
                    @*Haku*@
                    <div style="margin-top: 28px; margin-left: 20px" class="col-4">
                        <input class="form" id="searchString1" name="searchString1" placeholder="Haku" style="width: 200px;" type="text" value="">
                    </div>
                </div>
            </div>

            @* Showcase ikkuna *@
            <div id="showcase">
                <div id="picture-display" class="picture-display">
                </div>
                <div>
                    @*<h2>Esittelyssä</h2>*@
                    <div id="product-display"></div>
                </div>
            </div>

            @*Keski boxin elementit*@
            <table class="table">
                <tr>

                    <th>
                        @Html.DisplayNameFor(model => model.Products.First().Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Products.First().Price)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Products.First().Image)
                    </th>

                    <th></th>
                </tr>

                @foreach (var item in Model.Products)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>
                        <td>
                            @RenderProductImage(item.ProductID, item.Image)
                        </td>

                    </tr>
                }
            </table>
        </div>

    </div>

</main>

<script type="text/javascript">
    const products = [
        @foreach (var product in Model.Products)
        {


            @: { name: "@product.Name", price: "@product.Price)", pictureUrl: "@Url.Action("GetImage", "Products", new { id = product.ProductID })" },
        }
    ];


            let currentIndex = 0;

            function showProduct(index) {
                const productDisplay = document.getElementById("product-display");
                const imageDisplay = document.getElementById("picture-display");
                const product = products[index];

                productDisplay.innerHTML = `
                    <h3>${product.name}</h3>

                    <p style="color:red;">${parseFloat(product.price).toFixed(2)}€</p>

                `;
        imageDisplay.style.backgroundImage = `url(${product.pictureUrl})`;

    }

    function rotateProducts() {
        showProduct(currentIndex);
        currentIndex = (currentIndex + 1) % products.length;
    }

    setInterval(rotateProducts, 5000);

    document.addEventListener("DOMContentLoaded", rotateProducts);
</script>
